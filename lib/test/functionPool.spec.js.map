{"version":3,"sources":["../../src/test/functionPool.spec.js"],"names":[],"mappings":"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","file":"src/test/functionPool.spec.js","sourcesContent":["import _ from 'lodash'\nimport Promise from 'bluebird'\nimport functionPool from '../functionPool'\nimport invert from '../invert'\n\ndescribe('function pool', () => {\n  it('should schedule a single function call', () => {\n    var pool = functionPool([ arg => Promise.resolve(arg + 5) ])\n\n    return pool(4).then(result => {\n      result.should.equal(9)\n    })\n  })\n\n  it('should schedule four calls over two functions', () => {\n    var defs = _.range(0, 4).map(Promise.defer)\n    var nCalls = 0\n    var pool = functionPool(_.range(0, 2).map(() => () => defs[nCalls++].promise))\n    var promises = _.range(0, 4).map(() => pool())\n\n    return Promise.delay(10).then(() => {\n      nCalls.should.equal(2)\n      defs[1].fulfill()\n      return promises[1]\n    })\n    .then(() => {\n      nCalls.should.equal(3)\n      defs[0].fulfill()\n      return promises[0]\n    })\n    .then(() => {\n      nCalls.should.equal(4)\n      defs[2].fulfill()\n      defs[3].fulfill()\n      return Promise.all(promises.slice(2))\n    })\n  })\n\n  it('should schedule four calls over two functions accounting for rejections', () => {\n    var defs = _.range(0, 4).map(Promise.defer)\n    var nCalls = 0\n    var pool = functionPool(_.range(0, 2).map(() => () => defs[nCalls++].promise))\n    var promises = _.range(0, 4).map(() => pool())\n\n    return Promise.delay(10).then(() => {\n      nCalls.should.equal(2)\n      defs[1].reject()\n      return invert(promises[1])\n    })\n    .then(() => {\n      nCalls.should.equal(3)\n      defs[0].reject()\n      return invert(promises[0])\n    })\n    .then(() => {\n      nCalls.should.equal(4)\n      defs[2].fulfill()\n      defs[3].fulfill()\n      return Promise.all(promises.slice(2))\n    })\n  })\n\n  it('should replace a free function with a replacement', () => {\n    var pooled = _.range(0, 2).map(idx => () => Promise.resolve((idx + 1) * 10))\n    var pool = functionPool(pooled)\n\n    pool.replace(pooled[1], () => Promise.resolve(5))\n\n    return Promise.all([ pool(), pool(), pool() ]).then(vals => {\n      vals.should.eql([10, 5, 10])\n    })\n  })\n\n  it('should replace a running function with a replacement', () => {\n    var pooled = _.range(0, 2).map(idx => () => Promise.delay((idx + 1) * 10, 100))\n    var pool = functionPool(pooled)\n\n    var calls = [ pool(), pool(), pool(), pool() ]\n\n    return Promise.delay(10).then(() => {\n      pool.replace(pooled[1], () => Promise.resolve(5))\n      return Promise.delay(10)\n    })\n    .then(() => {\n      calls[0].isFulfilled().should.be.false\n      calls[1].isFulfilled().should.be.false\n      calls[2].isFulfilled().should.be.true\n      calls[3].isFulfilled().should.be.true\n      return Promise.all(calls)\n    })\n    .then(vals => {\n      vals.should.eql([10, 20, 5, 5])\n    })\n  })\n\n  var setDelayFunction = (data, instruction) => {\n    var { set, delay } = instruction\n    if (set) {\n      var oldVal = data.field\n      data.field = set\n      return Promise.resolve(data.idx + oldVal)\n    }\n    else if (delay)\n      return Promise.delay(data.idx + data.field, delay)\n  }\n\n  it('should call all free functions via `all`', () => {\n    var pooled = _.range(0, 2).map(idx => {\n      return setDelayFunction.bind(null, { idx, field: 0 })\n    })\n    var pool = functionPool(pooled)\n\n    return Promise.all([\n      pool.all({ set: 10 }),\n      pool({ delay: 100 }),\n      pool({ delay: 100 }),\n    ])\n    .then(results => {\n      results.should.eql([ [ 0, 1 ], 10, 11 ])\n      pool.running.should.have.length(0)\n      pool.free.should.have.length(2)\n    })\n  })\n\n  it('should call one free and one running function (when ready) via `all`', () => {\n    var pooled = _.range(0, 2).map(idx => {\n      return setDelayFunction.bind(null, { idx, field: 0 })\n    })\n    var pool = functionPool(pooled)\n\n    return Promise.all([\n      pool({ delay: 50 }),\n      pool.all({ set: 10 }),\n      pool({ delay: 100 }),\n      pool({ delay: 100 }),\n      pool({ delay: 100 }),\n      pool({ delay: 100 }),\n    ])\n    .then(results => {\n      results.should.eql([ 0, [1, 0], 10, 11, 10, 11 ])\n      pool.running.should.have.length(0)\n      pool.free.should.have.length(2)\n    })\n  })\n})\n"]}