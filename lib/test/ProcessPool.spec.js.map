{"version":3,"sources":["../../src/test/ProcessPool.spec.js"],"names":[],"mappings":"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","file":"src/test/ProcessPool.spec.js","sourcesContent":["import Promise from 'bluebird'\nimport ProcessPool from '../ProcessPool'\nimport invert from '../invert'\nimport {ChildProcess} from \"child_process\";\n\ndescribe('process pool', () => {\n  var pool\n  beforeEach(() => pool = new ProcessPool({ processLimit: 2 }))\n  afterEach(() => pool.destroy())\n\n  it('should create a sub-process that can accept arguments and return a value', () => {\n    var func = pool.prepare(() => (arg1, arg2) => arg1 * arg2 * 10)\n    return func(2, 3).then(v => {\n      func.running.length.should.equal(0)\n      v.should.equal(60)\n    })\n  })\n\n  it(\n    'ready() call should return promise that resolves when all subprocesses are ready',\n    () => {\n      var func = pool.prepare(() => () => {})\n      return pool.ready()\n    }\n  )\n\n  it(\n    'should create a sub-process that can accept arguments and return a value from a Promise',\n    () => {\n      var func = pool.prepare(() => {\n        var Promise = require('bluebird')\n        return (arg1, arg2) => Promise.resolve(arg1 * arg2 * 10)\n      })\n      return func(2, 3).then(v => {\n        v.should.equal(60)\n      })\n    }\n  )\n\n  it('should catch a thrown exception in a sub-process and fail the promise', done => {\n    var func = pool.prepare(() => (arg1, arg2) => { throw Error('ohno') })\n    return invert(func(2, 3)).then(err => {\n      err.message.should.equal('ohno')\n      done()\n    })\n  })\n\n  it('should pass context to prepare call', () => {\n    var func = pool.prepare(ctxt => {\n      var Promise = require('bluebird')\n      return (arg1, arg2) => Promise.resolve(arg1 + arg2 + ctxt)\n    }, 10)\n    return func(2, 3).then(v => {\n      v.should.equal(15)\n    })\n  })\n\n  it('should require node modules using the parent process module.paths', () => {\n    module.paths.push(__dirname + '/node_modules.test')\n\n    var func = pool.prepare(ctxt => {\n      var friender = require('friender')\n      // would throw without module.filename being set via module\n      require('./node_modules.test/friender/index.js')\n\n      return () => friender.friend || 'unknown'\n    })\n    // TODO: use indirect require to test this instead of previous line\n    // }, null, { module })\n\n    return func().then(v => {\n      v.should.equal('treebear')\n    })\n  })\n\n  it('should schedule three calls across two processes', () => {\n    var subprocFunc = pool.prepare(() => {\n      var Promise = require('bluebird')\n      return () => Promise.delay(Date.now(), 100)\n    })\n\n    return pool.ready().then(() => {\n      return Promise.all([ subprocFunc(), subprocFunc(), subprocFunc() ])\n    })\n    .then(vals => {\n      vals.length.should.equal(3)\n      Math.abs(vals[0] - vals[1]).should.be.below(50)\n      var longDiff = (vals[2] - vals[1])\n      longDiff .should.be.above(99)\n    })\n  })\n\n  it('should kill active process when requested', () => {\n    var subprocFunc = pool.prepare(() => {\n      var Promise = require('bluebird')\n      return () => Promise.delay(Date.now(), 100)\n    })\n    var func = pool.preparedFuncs[0]\n\n    return pool.ready().then(() => {\n      func.pool.free.length.should.equal(2)\n      func.pool.running.length.should.equal(0)\n\n      var callPromise = subprocFunc()\n\n      return Promise.delay(10).then(() => {\n        func.pool.free.length.should.equal(1)\n        func.pool.running.length.should.equal(1)\n        var killed = subprocFunc.kill()\n        killed.length.should.equal(1)\n        return invert(callPromise)\n      })\n    })\n    .then(err => {\n      err.message.should.equal('killed')\n      func.subProcesses.length.should.equal(2)\n      func.pool.free.length.should.equal(2)\n      func.pool.running.length.should.equal(0)\n\n      // wait for replace function to ready...\n      return pool.ready()\n    })\n    .then(() => {\n      return Promise.all([ subprocFunc(), subprocFunc() ])\n    })\n    .then(vals => {\n      vals.length.should.equal(2)\n      Math.abs(vals[0] - vals[1]).should.be.below(50)\n    })\n  })\n\n  it('should call onChildProcessSpawned callback on child process ready', () => {\n    function worker() {}\n    var calledCount = 0;\n    var childProcesses = []\n    function onChildProcessSpawned(childProcess) {\n      childProcesses.push(childProcess)\n    }\n    pool.prepare(worker, null, {processLimit: 4, onChildProcessSpawned});\n    return pool.ready().then(() => {\n      childProcesses.length.should.be.equal(4);\n    })\n  })\n})\n"]}