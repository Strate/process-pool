{"version":3,"sources":["../src/functionPool.js"],"names":[],"mappings":"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","file":"src/functionPool.js","sourcesContent":["import Promise from 'bluebird'\nimport _ from 'lodash'\n\nclass PooledFunction {\n  constructor(funcs) {\n    this.free = funcs.slice(0)\n    this.running = []\n    this.callQueue = []\n  }\n\n  getNextFreeFunction() {\n    if (this.free.length) {\n      var func = this.free.shift()\n      this.running.push(func)\n      return Promise.resolve(func)\n    }\n    else {\n      return new Promise(resolve => {\n        this.callQueue.push(func => {\n          // running.push must be here so it can happen\n          // in the same tick as it's removal from `free`\n          this.running.push(func)\n          resolve(func)\n        })\n      })\n    }\n  }\n\n  _callPriorityFunctions(func) {\n    var { priorityWork } = func\n    var { resolve, args } = priorityWork.shift()\n\n    // this is implemented recursively so that it can deal with extra priority\n    // work that is scheduled while it processes existing priority work\n    func(...args).then(result => {\n      if (priorityWork.length === 0) {\n        delete func.priorityWork\n        this.running.splice(this.running.indexOf(func), 1)\n        this._addToFreeQueue(func)\n        resolve(result)\n      }\n      else {\n        resolve(result)\n        this._callPriorityFunctions(func)\n      }\n    })\n  }\n\n  /**\n   * Mark a function call as complete, it will be assigned to new work if any\n   * is available otherwise it will return to the free queue.\n   * @pre function must not be in running queue.\n   */\n  _addToFreeQueue(func) {\n    if (func.priorityWork) {\n      this.running.push(func)\n      this._callPriorityFunctions(func)\n    }\n    else if (this.callQueue.length) {\n      this.callQueue.shift()(func)\n    }\n    else {\n      this.free.push(func)\n    }\n  }\n\n  replace(func, replacement) {\n    var idx = this.running.indexOf(func)\n    if (idx !== -1)\n      this.running.splice(idx, 1)\n    else\n      this.free.splice(this.free.indexOf(func), 1)\n\n    this._addToFreeQueue(replacement)\n  }\n\n  _callComplete(func) {\n    var runningIdx = this.running.indexOf(func)\n    // it could have been removed by a call to `replace`\n    if (runningIdx !== -1) {\n      this.running.splice(runningIdx, 1)\n      this._addToFreeQueue(func)\n    }\n  }\n\n  schedule(...args) {\n    return this.getNextFreeFunction().then(func => {\n      return func(...args).then(result => {\n        this._callComplete(func)\n        return result\n      })\n      .catch(err => {\n        this._callComplete(func)\n        throw err\n      })\n    })\n  }\n\n  all(...args) {\n    var { running } = this\n    var free = this.free.slice()\n    this.free.length = 0\n\n    var promises = free.map(func => func(...args))\n\n    var runningPromises = running.map(func => {\n      return new Promise(resolve => {\n        var { priorityWork } = func\n        var data = { resolve, args }\n        if (priorityWork)\n          priorityWork.push(data)\n        else\n          func.priorityWork = [ data ]\n      })\n    })\n\n    if (runningPromises.length)\n      promises.push(...runningPromises)\n\n    running.push(...free)\n\n    return Promise.all(promises)\n    .then(results => {\n      // or maybe it should be running...\n      free.forEach(func => {\n        running.splice(running.indexOf(func), 1)\n        this._addToFreeQueue(func)\n      })\n      return results\n    })\n  }\n}\n\n/**\n * This schedules work out to a number of promise returning functions, after\n * each function has been called it will remain unavailable for future calls\n * until the promise returned by the outstanding call is resolved or rejected.\n */\nexport default function(funcs) {\n  var pooled = new PooledFunction(funcs)\n\n  var ret = pooled.schedule.bind(pooled)\n  ret.replace = pooled.replace.bind(pooled)\n  ret.all = pooled.all.bind(pooled)\n  ret.free = pooled.free\n  ret.running = pooled.running\n  return ret\n}\n"]}